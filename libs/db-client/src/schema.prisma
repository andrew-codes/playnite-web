// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client"
  output        = "../.generated/prisma"
  moduleFormat  = "esm"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SiteSettings {
  id       String @id @unique
  name     String @unique
  value    String
  dataType String
}

model UserSetting {
  id       Int     @id @default(autoincrement())
  name     String
  value    String?
  dataType String
  User     User    @relation(fields: [userId], references: [id])
  userId   Int

  @@unique([userId, name])
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String
  username   String    @unique
  password   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Libraries  Library[]
  permission Int

  Settings UserSetting[]

  @@index([email])
}

model Library {
  id                        Int      @id @default(autoincrement())
  userId                    Int
  name                      String
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  playniteId                String?
  defaultCompletionStatusId Int?
  platformPriority          Int[]    @default([])

  Releases  Release[]
  Platforms Platform[] @relation("LibraryPlatforms")
  Sources   Source[]
  Features  Feature[]

  User             User               @relation(fields: [userId], references: [id])
  CompletionStatus CompletionStatus[]
  Playlists        Playlist[]
  Games            Game[]
  Tags             Tag[]

  @@unique([playniteId, userId])
  @@index([userId])
  @@index([playniteId, userId])
}

model Release {
  id                 Int       @id @default(autoincrement())
  libraryId          Int
  title              String
  description        String?
  coverId            Int
  releaseDate        DateTime?
  releaseYear        Int?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  sourceId           Int
  communityScore     Float?
  criticScore        Float?
  hidden             Boolean   @default(false)
  completionStatusId Int?
  playniteId         String?
  playtime           BigInt?   @default(0)
  runState           String

  Library          Library           @relation(fields: [libraryId], references: [id])
  Cover            Asset             @relation(fields: [coverId], references: [id])
  Source           Source            @relation(fields: [sourceId], references: [id])
  Features         Feature[]
  CompletionStatus CompletionStatus? @relation(fields: [completionStatusId], references: [id])
  Games            Game[]            @relation("GameReleases")
  Tags             Tag[]
  gameId           Int?

  @@unique([playniteId, libraryId])
  @@index([libraryId])
  @@index([sourceId])
  @@index([title, libraryId])
}

model Source {
  id         Int      @id @default(autoincrement())
  libraryId  Int
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  platformId Int
  playniteId String?

  Releases Release[]
  Library  Library   @relation(fields: [libraryId], references: [id])
  Platform Platform? @relation(fields: [platformId], references: [id])

  @@unique([playniteId, libraryId])
  @@unique([name, libraryId])
  @@index([libraryId])
  @@index([name, libraryId])
}

model Platform {
  id         Int      @id @default(autoincrement())
  libraryId  Int
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  playniteId String?
  iconId     Int?

  Library Library  @relation("LibraryPlatforms", fields: [libraryId], references: [id])
  Icon    Asset?   @relation(fields: [iconId], references: [id])
  Sources Source[]

  @@unique([playniteId, libraryId])
  @@unique([name, libraryId])
  @@index([libraryId])
  @@index([name, libraryId])
}

model Asset {
  id        Int      @id @default(autoincrement())
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)
  ignId     String?
  url       String?

  Releases Release[]
  Platform Platform[]

  @@index([ignId])
}

model Feature {
  id         Int      @id @default(autoincrement())
  libraryId  Int
  playniteId String?
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Releases Release[]
  Library  Library   @relation(fields: [libraryId], references: [id])

  @@unique([name, libraryId])
  @@unique([playniteId, libraryId])
  @@index([name, libraryId])
  @@index([libraryId])
}

model CompletionStatus {
  id         Int      @id @default(autoincrement())
  libraryId  Int
  playniteId String?
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Releases Release[]
  Library  Library   @relation(fields: [libraryId], references: [id])

  @@unique([name, libraryId])
  @@unique([playniteId, libraryId])
  @@index([libraryId])
  @@index([name, libraryId])
}

model Playlist {
  id        Int      @id @default(autoincrement())
  libraryId Int
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Library Library @relation(fields: [libraryId], references: [id])
  Games   Game[]

  @@unique([name, libraryId])
  @@index([libraryId])
  @@index([name, libraryId])
}

model Game {
  id        Int    @id @default(autoincrement())
  title     String
  libraryId Int

  Releases  Release[]  @relation("GameReleases")
  Library   Library    @relation(fields: [libraryId], references: [id])
  Playlists Playlist[]

  @@unique([title, libraryId])
  @@index([libraryId])
  @@index([title, libraryId])
}

model Tag {
  id         Int      @id @default(autoincrement())
  libraryId  Int
  playniteId String?
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Releases Release[]
  Library  Library   @relation(fields: [libraryId], references: [id])

  @@unique([playniteId, libraryId])
  @@unique([name, libraryId])
  @@index([libraryId])
  @@index([libraryId, name])
}
