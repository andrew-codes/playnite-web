{
  "name": "playnite-web-app",
  "sourceRoot": "apps/playnite-web-app/src",
  "projectType": "application",
  "targets": {
    "clean": {
      "executor": "nx:run-commands",
      "dependsOn": ["clean/package", "clean/test", "clean/build"],
      "options": {
        "parallel": true,
        "commands": []
      }
    },
    "clean/build": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn rimraf build _build-output .generated",
        "cwd": "{projectRoot}"
      }
    },
    "clean/package": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn rimraf _packaged",
        "cwd": "{projectRoot}"
      }
    },
    "clean/test": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn rimraf .test-runs .nyc_output visual-regression-tests/*report cypress/screenshots/* cypress/videos/* visual-regression-tests/**/comparison visual-regression-tests/**/diff",
        "cwd": "{projectRoot}"
      }
    },
    "demo-data": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn tsx scripts/seedTestData.ts",
        "cwd": "{projectRoot}"
      }
    },
    "prepare": {
      "executor": "nx:run-commands",
      "dependsOn": ["clean/build", "^prepare"],
      "cache": false,
      "options": {
        "command": "yarn graphql-codegen --config codegen.ts",
        "cwd": "{projectRoot}"
      }
    },
    "start": {
      "executor": "nx:run-commands",
      "inputs": [
        "{projectRoot}/codegen.ts",
        "{projectRoot}/src/server/graphql/resolverTypes.ts",
        "{projectRoot}/src/server/graphql/modules/**/*.graphql"
      ],
      "options": {
        "cwd": "{projectRoot}",
        "parallel": false,
        "commands": ["yarn tsx scripts/startDevServer.ts"],
        "env": {
          "NODE_ENV": "development",
          "LOG_LEVEL": "silly"
        }
      }
    },
    "test/unit": {
      "executor": "nx:run-commands",
      "dependsOn": ["clean/test"],
      "inputs": ["src", "generated", "{projectRoot}/jest.config.js"],
      "outputs": ["{projectRoot}/.test-runs/unit"],
      "options": {
        "command": "yarn jest --config jest.config.js",
        "cwd": "{projectRoot}"
      },
      "configurations": {
        "ci": {}
      }
    },
    "test/components": {
      "executor": "nx:run-commands",
      "dependsOn": ["clean/test"],
      "inputs": [
        "src",
        "generated",
        "{projectRoot}/cypress.config.js",
        "{projectRoot}/cypress-image-diff.config.js",
        "{projectRoot}/.nycrc",
        "{projectRoot}/cypress/support/component*",
        "{projectRoot}/cypress/fixtures/**",
        "{projectRoot}/cypress/tsconfig.json"
      ],
      "outputs": [
        "{projectRoot}/.test-runs/cypress",
        "{projectRoot}/visual-regression-tests/component-report",
        "{projectRoot}/visual-regression-tests/component-screenshots/comparison",
        "{projectRoot}/visual-regression-tests/component-screenshots/diff"
      ],
      "options": {
        "parallel": true,
        "commands": [
          "yarn cypress open --component --browser chrome",
          "yarn react-devtools"
        ],
        "cwd": "{projectRoot}"
      },
      "defaultConfiguration": "dev",
      "configurations": {
        "dev": {
          "env": {
            "TEST": "component",
            "NODE_ENV": "development",
            "CMD": "run"
          }
        },
        "ci": {
          "commands": ["yarn cypress run --component --browser chrome"],
          "env": {
            "CI": "true",
            "TEST": "component",
            "NODE_ENV": "production"
          }
        },
        "ci/local": {
          "commands": ["yarn cypress run --component --browser chrome"],
          "env": {
            "CI": "true",
            "NODE_ENV": "production",
            "TEST": "component",
            "CMD": "run"
          }
        }
      }
    },
    "test/components/update": {
      "inputs": [
        "src",
        "generated",
        "{projectRoot}/cypress.config.js",
        "{projectRoot}/cypress-image-diff.config.js",
        "{projectRoot}/.nycrc",
        "{projectRoot}/cypress/support/component*",
        "{projectRoot}/cypress/fixtures/**",
        "{projectRoot}/cypress/tsconfig.json"
      ],
      "executor": "nx:run-commands",
      "dependsOn": ["clean/test"],
      "options": {
        "parallel": false,
        "command": "yarn tsx scripts/component-for-update.ts",
        "cwd": "{projectRoot}",
        "env": {
          "NODE_ENV": "production",
          "TEST": "component"
        }
      }
    },
    "test/e2e/dev": {
      "executor": "nx:run-commands",
      "dependsOn": ["clean/test", "^start", "prepare", "^prepare", "^build"],
      "options": {
        "parallel": true,
        "commands": ["yarn react-devtools", "yarn tsx scripts/e2e-dev.ts"],
        "cwd": "{projectRoot}",
        "env": {
          "START_SERVER_AND_TEST_INSECURE": "1",
          "LOG_LEVEL": "verbose",
          "NODE_ENV": "production",
          "TEST": "e2e",
          "CYPRESS_REMOTE_DEBUGGING_PORT": "9222"
        }
      }
    },
    "test/e2e": {
      "executor": "nx:run-commands",
      "inputs": ["{projectRoot}/_packaged"],
      "options": {
        "parallel": false,
        "cwd": "{projectRoot}",
        "commands": ["yarn tsx scripts/e2e.ts"]
      },
      "defaultConfiguration": "ci",
      "configurations": {
        "ci": {
          "env": {
            "CMD": "run",
            "LOCAL": "true",
            "CI": "true",
            "TEST": "e2e",
            "LOG_LEVEL": "error",
            "CYPRESS_REMOTE_DEBUGGING_PORT": "9222",
            "START_SERVER_AND_TEST_INSECURE": "1",
            "NODE_ENV": "production",
            "DATABASE_URL": "postgresql://local:dev@localhost:5432/games?schema=public",
            "SPLIT_FILE": "cypress-timings.json"
          }
        },
        "dev": {
          "env": {
            "CMD": "open",
            "LOCAL": "true",
            "CI": "true",
            "LOG_LEVEL": "silly",
            "TEST": "e2e",
            "CYPRESS_REMOTE_DEBUGGING_PORT": "9222",
            "START_SERVER_AND_TEST_INSECURE": "1",
            "NODE_ENV": "production",
            "DATABASE_URL": "postgresql://local:dev@localhost:5432/games?schema=public"
          }
        },
        "timings": {
          "env": {
            "CMD": "run",
            "LOCAL": "true",
            "CI": "true",
            "LOG_LEVEL": "error",
            "TEST": "e2e",
            "CYPRESS_REMOTE_DEBUGGING_PORT": "9222",
            "START_SERVER_AND_TEST_INSECURE": "1",
            "NODE_ENV": "production",
            "DATABASE_URL": "postgresql://local:dev@localhost:5432/games?schema=public",
            "SPLIT": "1",
            "SPLIT_INDEX": "0",
            "SPLIT_FILE": "cypress-timings.json"
          }
        }
      }
    },
    "test/e2e/update": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "command": "yarn tsx scripts/e2e.ts",
        "cwd": "{projectRoot}",
        "env": {
          "CMD": "run",
          "CYPRESS_REMOTE_DEBUGGING_PORT": "9222",
          "NODE_ENV": "production",
          "UPDATE": "true",
          "LOG_LEVEL": "info"
        }
      }
    },
    "build": {
      "executor": "nx:run-commands",
      "defaultConfiguration": "production",
      "options": {
        "cwd": "{projectRoot}",
        "commands": ["yarn tsx scripts/build.ts"]
      },
      "configurations": {
        "production": {
          "env": {
            "NODE_ENV": "production"
          }
        }
      }
    },
    "build/e2e": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "commands": ["yarn tsx scripts/build.ts"],
        "env": {
          "NODE_ENV": "production",
          "INSTRUMENT": "true"
        }
      }
    },
    "package": {
      "inputs": [
        "{projectRoot}/package.json",
        "{projectRoot}/build/**",
        "{projectRoot}/_build-output/**",
        "{projectRoot}/scripts/packageFiles.ts",
        "{projectRoot}/scripts/package.ts"
      ],
      "outputs": ["{projectRoot}/_packaged"],
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "commands": [],
        "cwd": "{projectRoot}"
      },
      "defaultConfiguration": "production",
      "configurations": {
        "files": {
          "commands": ["yarn tsx scripts/packageFiles.ts"]
        },
        "production": {
          "commands": [
            "yarn tsx scripts/packageFiles.ts",
            "yarn tsx scripts/package.ts"
          ]
        }
      }
    },
    "package/e2e": {
      "inputs": [
        "{projectRoot}/package.json",
        "{projectRoot}/build/**",
        "{projectRoot}/_build-output/**",
        "{projectRoot}/scripts/packageFiles.ts",
        "{projectRoot}/scripts/package.ts"
      ],
      "outputs": ["{projectRoot}/_packaged"],
      "executor": "nx:run-commands",
      "cache": true,
      "options": {
        "parallel": false,
        "commands": [
          "yarn tsx scripts/packageFiles.ts",
          "yarn tsx scripts/packageDemoCoverArt.ts",
          "yarn tsx scripts/package.ts"
        ],
        "env": {
          "LOCAL": "true"
        },
        "cwd": "{projectRoot}"
      }
    },
    "package/prune": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "commands": ["yarn tsx scripts/packagePrune.ts"],
        "cwd": "{projectRoot}"
      }
    },
    "package/files/e2e": {
      "inputs": [
        "{projectRoot}/package.json",
        "{projectRoot}/build/**",
        "{projectRoot}/_build-output/**",
        "{projectRoot}/scripts/packageFiles.ts",
        "{projectRoot}/scripts/package.ts"
      ],
      "outputs": ["{projectRoot}/_packaged"],
      "dependsOn": ["build/e2e"],
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "commands": [
          "yarn tsx scripts/packageFiles.ts",
          "yarn tsx scripts/packageDemoCoverArt.ts"
        ],
        "cwd": "{projectRoot}"
      }
    },
    "publish": {}
  },
  "tags": ["linux"],
  "implicitDependencies": []
}
