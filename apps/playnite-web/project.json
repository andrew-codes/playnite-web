{
  "name": "playnite-web-app",
  "sourceRoot": "apps/playnite-web-app/src",
  "projectType": "application",
  "targets": {
    "clean": {
      "executor": "nx:run-commands",
      "outputs": [
        "{projectRoot}/.dist",
        "{projectRoot}/_packaged",
        "{projectRoot}/.test-runs",
        "{projectRoot}/build",
        "{projectRoot}/.nyc_output"
      ],
      "options": {
        "command": "yarn rimraf server.production.js .dist _packaged .test-runs build .nyc_output",
        "cwd": "{projectRoot}"
      }
    },
    "prepare": {
      "executor": "nx:run-commands",
      "inputs": [
        "{projectRoot}/codegen.ts",
        "{projectRoot}/src/server/graphql/resolverTypes.ts",
        "{projectRoot}/src/server/graphql/modules/**/*.graphql"
      ],
      "outputs": ["{projectRoot}/.generated"],
      "options": {
        "command": "yarn graphql-codegen --config codegen.ts",
        "cwd": "{projectRoot}"
      }
    },
    "start/prepare": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bash -c '.devcontainer/manually-start-services.sh'"
      }
    },
    "start": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "yarn cross-env NODE_ENV=development DEBUG='playnite*' yarn node --experimental-json-modules scripts/utils/startDevServer.js"
      }
    },
    "test/unit": {
      "executor": "nx:run-commands",
      "outputs": ["{projectRoot}/.test-runs/unit"],
      "options": {
        "command": "yarn jest --config jest.config.js",
        "cwd": "{projectRoot}"
      }
    },
    "test/unit/ci": {
      "executor": "nx:run-commands",
      "outputs": ["{projectRoot}/.test-runs/unit"],
      "options": {
        "command": "yarn jest --config jest.config.js",
        "cwd": "{projectRoot}"
      }
    },
    "test/components": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn cypress open --component --browser electron",
        "cwd": "{projectRoot}"
      }
    },
    "test/components/ci": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn cross-env TEST=component CI=true yarn cypress run --component --browser electron",
        "cwd": "{projectRoot}"
      }
    },
    "test/components/update": {
      "executor": "nx:run-commands",
      "options": {
        "command": "(yarn cross-env CI=true yarn cypress run --component --browser electron || true) && yarn cypress-image-diff-html-report start --reportJsonDir visual-regression-tests/report --autoOpen",
        "cwd": "{projectRoot}"
      }
    },
    "test/e2e": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn cross-env START_SERVER_AND_TEST_INSECURE=1 yarn start-server-and-test 'yarn cross-env DEBUG=\"playnite-web/*\" yarn nx run playnite-web-app:start' http://localhost:3000 'yarn cross-env TEST=e2e yarn cypress open --e2e --browser electron'",
        "cwd": "{projectRoot}"
      }
    },
    "test/e2e/update": {
      "executor": "nx:run-commands",
      "options": {
        "command": "((yarn cross-env START_SERVER_AND_TEST_INSECURE=1 yarn start-server-and-test 'yarn cross-env DEBUG=\"playnite-web/*\" yarn nx run playnite-web-app:start' http://localhost:3000 'yarn cross-env TEST=e2e yarn cypress run --e2e --browser electron') || true) && yarn cypress-image-diff-html-report start --reportJsonDir visual-regression-tests/report --autoOpen",
        "cwd": "{projectRoot}"
      }
    },
    "test/e2e/ci/prepare": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bash -c '.devcontainer/manually-start-services-for-e2e.sh'"
      }
    },
    "test/e2e/ci/instrument": {
      "executor": "nx:run-commands",
      "inputs": [
        "{projectRoot}/_packaged/server.production.js",
        "{projectRoot}/_packaged/build",
        "{projectRoot}/_packaged/public"
      ],
      "outputs": ["{projectRoot}/_packaged/server.instrumented.js"],
      "options": {
        "command": "yarn cross-env NODE_OPTIONS=--max-old-space-size=10240 yarn nyc instrument _packaged/server.production.js > _packaged/server.instrumented.js",
        "cwd": "{projectRoot}"
      }
    },
    "test/e2e/ci": {
      "executor": "nx:run-commands",
      "options": {
        "command": "yarn cross-env START_SERVER_AND_TEST_INSECURE=1 yarn start-server-and-test 'yarn cross-env NODE_OPTIONS=--max-old-space-size=20480 DEBUG='playnite*' yarn nyc --reporter lcov --require ../../.pnp.cjs node _packaged/server.instrumented.js' http://localhost:3000 'yarn cross-env TEST=e2e CI=true yarn cypress run --e2e --browser electron'",
        "cwd": "{projectRoot}"
      }
    },
    "test/e2e/ci/local/prepare": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bash -c '.devcontainer/manually-start-services.sh'"
      }
    },
    "test/e2e/ci/local": {
      "executor": "nx:run-commands",
      "outputs": ["{projectRoot}/.nyc_output", "{projectRoot}/.nyc_report"],
      "inputs": [
        "{projectRoot}/_packaged/build",
        "{projectRoot}/_packaged/public",
        "{projectRoot}/_packaged/server.instrumented.js",
        "{projectRoot}/cypress.config.js",
        "{projectRoot}/cypress-image-diff.config.js",
        "{projectRoot}/.nycrc"
      ],
      "options": {
        "command": "yarn cross-env START_SERVER_AND_TEST_INSECURE=1 yarn start-server-and-test 'yarn cross-env NODE_OPTIONS=--max-old-space-size=20480 DEBUG='playnite*' yarn nyc --reporter lcov --require ../../.pnp.cjs node _packaged/server.instrumented.js' http://localhost:3000 'yarn cross-env TEST=e2e CI=true yarn cypress open --e2e --browser electron'",
        "cwd": "{projectRoot}"
      }
    },
    "build": {
      "executor": "nx:run-commands",
      "outputs": ["{projectRoot}/build", "{projectRoot}/server.production.js"],
      "options": {
        "command": "yarn remix vite:build && yarn cross-env NODE_ENV=production yarn node scripts/utils/buildServer.js",
        "cwd": "{projectRoot}"
      }
    },
    "package": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["echo 'Packaging application into container image.'"],
        "cwd": "{projectRoot}"
      }
    },
    "package/container": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "yarn node --require esbuild-register --experimental-json-modules scripts/package.ts"
        ],
        "cwd": "{projectRoot}"
      }
    },
    "package/files": {
      "inputs": ["{projectRoot}/.dist", "{projectRoot}/server.production.js"],
      "executor": "nx:run-commands",
      "outputs": ["{projectRoot}/_packaged"],
      "options": {
        "commands": [
          "yarn node --require esbuild-register --experimental-json-modules scripts/packageFiles.ts"
        ],
        "cwd": "{projectRoot}"
      }
    },
    "package/prune": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "yarn node --require esbuild-register --experimental-json-modules scripts/packagePrune.ts"
        ],
        "cwd": "{projectRoot}"
      }
    },
    "publish": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["echo 'Publishing'"],
        "cwd": "{projectRoot}"
      }
    }
  },
  "tags": ["linux"],
  "implicitDependencies": []
}
