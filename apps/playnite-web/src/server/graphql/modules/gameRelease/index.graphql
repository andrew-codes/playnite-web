type GameRelease {
  id: String!
  name: String!
  description: String
  communityScore: Int
  criticScore: Int
  gameId: String!
  hidden: Boolean!
  releaseDate: Date
  recentActivity: DateTime
  runState: String!
  platform: Platform!
  completionStatus: CompletionStatus!
  cover: GameAsset
  features: [Feature]!
  source: Source!
  active: Boolean!
}

type GameReleaseSubscriptionPayload {
  id: String!
  gameId: String!
  runState: String!
  processId: String!
}

enum ActivationState {
  Started
  Stopped
  Restarted
}
type GameReleaseActivationSubscriptionPayload {
  id: String!
  gameId: String!
  state: ActivationState!
}

extend type Subscription {
  releaseRunStateChanged: GameReleaseSubscriptionPayload
  releaseActivationStateChanged: GameReleaseActivationSubscriptionPayload
}

extend type Mutation {
  activateGameRelease(releaseId: String!): GameRelease!
    @deprecated(reason: "Use startGameRelease instead")
  startGameRelease(releaseId: String!): GameRelease!
  stopGameRelease(releaseId: String!): GameRelease!
  restartGameRelease(releaseId: String!): GameRelease!
}

extend type Query {
  nowPlaying: GameRelease
}
