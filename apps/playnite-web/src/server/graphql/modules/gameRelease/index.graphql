type GameRelease {
  id: String!
  name: String!
  description: String
  communityScore: Int
  criticScore: Int
  game: Game!
  gameId: String!
  hidden: Boolean!
  releaseDate: Date
  releaseYear: Int
  recentActivity: DateTime
  runState: String!
  platform: Platform!
  completionStatus: CompletionStatus!
  cover: GameAsset
  features: [Feature]!
  source: Source!
  processId: Int
}

type GameReleaseStateSubscriptionPayload {
  id: String!
  gameId: String!
  runState: String!
  processId: String
}

extend type Subscription {
  releaseRunStateChanged: GameReleaseStateSubscriptionPayload
}

extend type Mutation {
  startGameRelease(releaseId: String!): GameRelease!
  stopGameRelease(releaseId: String!): GameRelease!
  restartGameRelease(releaseId: String!): GameRelease!
}

extend type Query {
  nowPlaying: GameRelease
}
