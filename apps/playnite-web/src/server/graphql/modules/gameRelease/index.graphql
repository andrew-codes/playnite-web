type GameRelease {
  id: String!
  communityScore: Int
  completionStatus: CompletionStatus!
  cover: GameAsset
  criticScore: Int
  description: String
  features: [Feature]!
  game: Game!
  gameId: String!
  hidden: Boolean!
  name: String!
  platform: Platform!
  playniteWebRunState: String
  processId: Int
  recentActivity: DateTime
  releaseDate: Date
  releaseYear: Int
  runState: String!
  source: Source!
}

type GameReleaseStateSubscriptionPayload {
  id: String!
  gameId: String!
  processId: String
  runState: String!
}
type PlayniteWebRunStateSubscriptionPayload {
  id: String!
  runState: String!
}

input RelationUpdate {
  added: [String]!
  removed: [String]!
}

input UpdateGameReleaseInput {
  communityScore: Int
  completionStatusId: String
  criticScore: Int
  description: String
  featureIds: RelationUpdate
  hidden: Boolean
  platformId: String
  releaseDate: Date
}

extend type Subscription {
  releaseRunStateChanged: GameReleaseStateSubscriptionPayload
  playniteWebRunStateUpdated: PlayniteWebRunStateSubscriptionPayload
}

type BooleanMutationResult {
  success: Boolean!
}

extend type Mutation {
  startGameRelease(releaseId: String!): GameRelease!
  stopGameRelease(releaseId: String!): GameRelease!
  restartGameRelease(releaseId: String!): GameRelease!
  updateGameRelease(
    releaseId: String!
    input: UpdateGameReleaseInput!
  ): BooleanMutationResult!
}

extend type Query {
  nowPlaying: GameRelease
}
