"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.connectToNxCloudCommand = exports.connectToNxCloudIfExplicitlyAsked = exports.onlyDefaultRunnerIsUsed = void 0;
const output_1 = require("../../utils/output");
const configuration_1 = require("../../config/configuration");
const nx_cloud_utils_1 = require("../../utils/nx-cloud-utils");
const child_process_1 = require("../../utils/child-process");
function onlyDefaultRunnerIsUsed(nxJson) {
    const defaultRunner = nxJson.tasksRunnerOptions?.default?.runner;
    if (!defaultRunner) {
        // No tasks runner options OR no default runner defined:
        // - If access token defined, uses cloud runner
        // - If no access token defined, uses default
        return !(nxJson.nxCloudAccessToken ?? process.env.NX_CLOUD_ACCESS_TOKEN);
    }
    return defaultRunner === 'nx/tasks-runners/default';
}
exports.onlyDefaultRunnerIsUsed = onlyDefaultRunnerIsUsed;
async function connectToNxCloudIfExplicitlyAsked(opts) {
    if (opts['cloud'] === true) {
        const nxJson = (0, configuration_1.readNxJson)();
        if (!onlyDefaultRunnerIsUsed(nxJson))
            return;
        output_1.output.log({
            title: '--cloud requires the workspace to be connected to Nx Cloud.',
        });
        (0, child_process_1.runNxSync)(`connect-to-nx-cloud`, {
            stdio: [0, 1, 2],
        });
        output_1.output.success({
            title: 'Your workspace has been successfully connected to Nx Cloud.',
        });
        process.exit(0);
    }
}
exports.connectToNxCloudIfExplicitlyAsked = connectToNxCloudIfExplicitlyAsked;
async function connectToNxCloudCommand({ promptOverride, interactive, }) {
    const nxJson = (0, configuration_1.readNxJson)();
    if ((0, nx_cloud_utils_1.isNxCloudUsed)(nxJson)) {
        output_1.output.log({
            title: 'âœ… This workspace is already connected to Nx Cloud.',
            bodyLines: [
                'This means your workspace can use computation caching, distributed task execution, and show you run analytics.',
                'Go to https://nx.app to learn more.',
                ' ',
                'If you have not done so already, please claim this workspace:',
                `${(0, nx_cloud_utils_1.getNxCloudUrl)(nxJson)}/orgs/workspace-setup?accessToken=${(0, nx_cloud_utils_1.getNxCloudToken)(nxJson)}`,
            ],
        });
        return false;
    }
    const res = interactive ? await connectToNxCloudPrompt(promptOverride) : true;
    if (!res)
        return false;
    (0, child_process_1.runNxSync)(`g nx:connect-to-nx-cloud --quiet --no-interactive`, {
        stdio: [0, 1, 2],
    });
    return true;
}
exports.connectToNxCloudCommand = connectToNxCloudCommand;
async function connectToNxCloudPrompt(prompt) {
    return await (await Promise.resolve().then(() => require('enquirer')))
        .prompt([
        {
            name: 'NxCloud',
            message: prompt ?? `Enable distributed caching to make your CI faster`,
            type: 'autocomplete',
            choices: [
                {
                    name: 'Yes',
                    hint: 'I want faster builds',
                },
                {
                    name: 'No',
                },
            ],
            initial: 'Yes',
        },
    ])
        .then((a) => a.NxCloud === 'Yes');
}
