{
  "$schema": "http://json-schema.org/schema",
  "name": "core",
  "version": "0.0.1",
  "generators": {
    "library": {
      "factory": "./src/generators/lib/generator",
      "schema": "./src/generators/lib/schema.json",
      "description": "Generate a new C# project as an Nx library",
      "aliases": ["lib"],
      "x-type": "library"
    },
    "application": {
      "factory": "./src/generators/app/generator",
      "schema": "./src/generators/app/schema.json",
      "description": "Generate a new C# project as an Nx application",
      "aliases": ["app"],
      "x-type": "application"
    },
    "project-reference": {
      "factory": "./src/generators/project-reference/generator",
      "schema": "./src/generators/project-reference/schema.json",
      "description": "Add a reference from one project to another"
    },
    "init": {
      "factory": "./src/generators/init/generator",
      "schema": "./src/generators/init/schema.json",
      "description": "init generator",
      "alias": ["ng-add"],
      "hidden": true
    },
    "sync": {
      "factory": "./src/generators/sync/generator",
      "schema": "./src/generators/sync/schema.json",
      "description": "Synchronizes NuGet references for the workspace"
    },
    "nuget-reference": {
      "factory": "./src/generators/nuget-reference/generator",
      "schema": "./src/generators/nuget-reference/schema.json",
      "description": "Add a NuGet reference to a project"
    },
    "restore": {
      "factory": "./src/generators/restore/generator",
      "schema": "./src/generators/restore/schema.json",
      "description": "Restores NuGet packages and .NET tools used by the workspace"
    },
    "test": {
      "factory": "./src/generators/test/generator",
      "schema": "./src/generators/test/schema.json",
      "description": "Generate a .NET test project for an existing application or library",
      "x-type": "library"
    },
    "import-projects": {
      "factory": "./src/generators/import-projects/generator",
      "schema": "./src/generators/import-projects/schema.json",
      "description": "Import existing projects into your Nx workspace"
    },
    "add-swagger-target": {
      "factory": "./src/generators/add-swagger-target/add-swagger-target",
      "schema": "./src/generators/add-swagger-target/schema.json",
      "description": "Add a swagger target to a webapi based project to extract swagger.json into a newly generated library project"
    },
    "swagger-typescript": {
      "factory": "./src/generators/swagger-typescript/generator",
      "schema": "./src/generators/swagger-typescript/schema.json",
      "description": "Generate a typescript library project based on an openapi/swagger specification file"
    },
    "move": {
      "factory": "./src/generators/move/generator",
      "schema": "./src/generators/move/schema.json",
      "description": "Moves a .NET project (including updating references)",
      "alias": "mv"
    },
    "preset": {
      "factory": "./src/generators/preset/generator",
      "schema": "./src/generators/preset/schema.json",
      "description": "preset generator",
      "hidden": true
    },
    "nxjson-config": {
      "factory": "./src/generators/nxjson-config/generator",
      "schema": "./src/generators/nxjson-config/schema.json",
      "description": "Moves configuration from .nx-dotnet.rc to nx.json",
      "hidden": true
    }
  }
}
