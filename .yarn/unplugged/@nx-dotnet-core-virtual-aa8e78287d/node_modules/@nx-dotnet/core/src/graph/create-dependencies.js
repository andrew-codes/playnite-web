"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.processProjectGraph = exports.createDependencies = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
const node_path_1 = require("node:path");
const utils_1 = require("@nx-dotnet/utils");
const createDependencies = (ctxOrOpts, maybeCtx) => {
    // In Nx version 16.8 - 16.10, CreateDependencies had a single option - the context.
    // In v17, the signature was updated to pass options first, and context second.
    const ctx = maybeCtx !== null && maybeCtx !== void 0 ? maybeCtx : ctxOrOpts;
    let dependencies = [];
    const rootMap = Object.fromEntries(Object.entries(ctx.projects).map(([name, project]) => [project.root, name]));
    for (const source in ctx.filesToProcess.projectFileMap) {
        const changed = ctx.filesToProcess.projectFileMap[source];
        for (const file of changed) {
            const { ext } = (0, node_path_1.parse)(file.file);
            if (['.csproj', '.fsproj', '.vbproj'].includes(ext)) {
                dependencies = dependencies.concat((0, utils_1.getDependenciesFromXmlFile)(file.file, source, rootMap));
            }
        }
    }
    return dependencies;
};
exports.createDependencies = createDependencies;
const processProjectGraph = (g, ctx) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    const builder = new devkit_1.ProjectGraphBuilder(g);
    const deps = yield (0, exports.createDependencies)((0, utils_1.readConfig)(), Object.assign(Object.assign({}, ctx), { fileMap: {
            nonProjectFiles: [],
            projectFileMap: ctx.fileMap,
        }, filesToProcess: {
            nonProjectFiles: [],
            projectFileMap: ctx.filesToProcess,
        }, externalNodes: g.externalNodes, projects: ctx.projectsConfigurations.projects, workspaceRoot: devkit_1.workspaceRoot }));
    for (const dep of deps) {
        builder.addDependency(dep.source, dep.target, dep.type, dep.source);
    }
    return builder.getUpdatedProjectGraph();
});
exports.processProjectGraph = processProjectGraph;
//# sourceMappingURL=create-dependencies.js.map