"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/* eslint-disable @typescript-eslint/no-unused-vars */
const devkit_1 = require("@nx/devkit");
const generator_1 = require("../../generators/nxjson-config/generator");
const semver_1 = require("semver");
function update(host) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        if ((0, semver_1.major)(devkit_1.NX_VERSION) < 17) {
            devkit_1.output.warn({
                title: 'Skipping migration of nx-dotnet config.',
                bodyLines: [
                    'Nx 17 added standardized support for plugins to supply configuration options within nx.json. This migration would have moved your nx-dotnet config to nx.json, but you are using an older version of Nx.',
                    'After updating Nx, you can apply this migration by either running:',
                    '- nx g @nx-dotnet/core:nxjson-config',
                    '- nx migrate @nx-dotnet/core@1.24.0 --from 1.23.0',
                ],
            });
        }
        else {
            yield (0, generator_1.default)(host);
        }
    });
}
exports.default = update;
//# sourceMappingURL=update-1.24.0.js.map