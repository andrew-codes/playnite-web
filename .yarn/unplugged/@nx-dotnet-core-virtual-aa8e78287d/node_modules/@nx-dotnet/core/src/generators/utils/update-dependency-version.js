"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateDependencyVersions = void 0;
const tslib_1 = require("tslib");
const utils_1 = require("@nx-dotnet/utils");
function updateDependencyVersions(host, packageName, version) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const projects = yield (0, utils_1.getNxDotnetProjects)(host);
        for (const [projectName, configuration] of projects.entries()) {
            const projectFiles = (0, utils_1.getProjectFilesForProject)(host, configuration, projectName);
            for (const f of projectFiles) {
                const xmldoc = (0, utils_1.readXmlInTree)(host, f);
                let updateFile = false;
                yield (0, utils_1.iterateChildrenByPath)(xmldoc, 'ItemGroup.PackageReference', (reference) => {
                    if (reference.attr['Include'] === packageName &&
                        reference.attr['Version'] !== version) {
                        console.warn(`Updating ${projectName} to use ${packageName} v${version}`);
                        reference.attr['Version'] = version;
                        updateFile = true;
                    }
                });
                if (updateFile) {
                    host.write(f, xmldoc.toString());
                }
            }
        }
    });
}
exports.updateDependencyVersions = updateDependencyVersions;
//# sourceMappingURL=update-dependency-version.js.map