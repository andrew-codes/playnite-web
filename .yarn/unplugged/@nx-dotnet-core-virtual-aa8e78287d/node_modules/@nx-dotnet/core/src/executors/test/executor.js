"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
const path_1 = require("path");
const dotnet_1 = require("@nx-dotnet/dotnet");
const utils_1 = require("@nx-dotnet/utils");
let projectDirectory;
function runExecutor(options, context, dotnetClient = new dotnet_1.DotNetClient((0, dotnet_1.dotnetFactory)())) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const nxProjectConfiguration = (0, utils_1.getExecutedProjectConfiguration)(context);
        projectDirectory = (0, path_1.resolve)(devkit_1.workspaceRoot, nxProjectConfiguration.root);
        const projectFilePath = yield (0, utils_1.getProjectFileForNxProject)(nxProjectConfiguration);
        dotnetClient.cwd = projectDirectory;
        const { watch, extraParameters } = options, parsedOptions = tslib_1.__rest(options, ["watch", "extraParameters"]);
        try {
            const result = dotnetClient.test((0, path_1.resolve)(devkit_1.workspaceRoot, projectFilePath), watch, parsedOptions, extraParameters);
            if (watch && (0, utils_1.isChildProcess)(result)) {
                yield (0, utils_1.handleChildProcessPassthrough)(result);
                yield (0, utils_1.rimraf)(projectDirectory + '/bin');
                yield (0, utils_1.rimraf)(projectDirectory + '/obj');
            }
            return {
                success: true,
            };
        }
        catch (e) {
            devkit_1.logger.error(e);
            return { success: false };
        }
    });
}
exports.default = runExecutor;
//# sourceMappingURL=executor.js.map