name: "Release action runner image"

on:
  push:
    branches:
      - main
    paths:
      - apps/playnite-action-runner/**

jobs:
  release_action_runner_image:
    name: Release action runner image
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Read .nvmrc
        run: echo "##[set-output name=NODE_VERSION;]$(cat package.json | jq .engines.node | sed -e 's/"//g' | sed -e 's/>=//g')"
        id: nvm
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NODE_VERSION }}"
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "8.0.100"
      - name: Install deps
        run: yarn
      - name: Prepare
        run: yarn nx run-many --target=prepare --parallel --all --verbose
        env:
          ONEPASSWORD_TOKEN: ${{ secrets.ONEPASSWORD_TOKEN }}
          ONEPASSWORD_SERVER_URL: ${{ secrets.ONEPASSWORD_SERVER_URL }}
          ONEPASSWORD_VAULT_ID: ${{ secrets.ONEPASSWORD_VAULT_ID }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Package
        run: yarn nx run playnite-action-runner:package --verbose
        env:
          ONEPASSWORD_TOKEN: ${{ secrets.ONEPASSWORD_TOKEN }}
          ONEPASSWORD_SERVER_URL: ${{ secrets.ONEPASSWORD_SERVER_URL }}
          ONEPASSWORD_VAULT_ID: ${{ secrets.ONEPASSWORD_VAULT_ID }}
          NODE_ENV: production
      - name: Release runner image
        run: export VERSION=$(cat package.json | jq -r '.version')" && docker push ghcr.io/andrew-codes/playnite-action-runner:$VERSION
